import { initializeApp } from "firebase/app";
import { getAuth, signInWithPopup, GoogleAuthProvider } from "firebase/auth";
import {
	getFirestore,
	doc,
	getDoc,
	setDoc,
	serverTimestamp,
} from "firebase/firestore";

// Generated by firestore on project creation
const firebaseConfig = {
	apiKey: "AIzaSyA4sHkOwFx2rAjzgVgfxkktqU5fcUN_pU8",
	authDomain: "apex-store-db.firebaseapp.com",
	projectId: "apex-store-db",
	storageBucket: "apex-store-db.appspot.com",
	messagingSenderId: "407675975299",
	appId: "1:407675975299:web:80ff16de9b10ef42150db6",
};

// Initial setup
initializeApp(firebaseConfig);
export const db = getFirestore();
export const auth = getAuth();
const provider = new GoogleAuthProvider();
provider.setCustomParameters({
	prompt: "select_account",
});

// Create a popup method which will use the auth and provider
export const signInWithGooglePopup = () => signInWithPopup(auth, provider);

///////////////////////////////////////////////////////////////////////////////////////////
// FIRESTORE METHODS
///////////////////////////////////////////////////////////////////////////////////////////
export const createUserDocumentFromAuth = async (userAuth) => {
	const userDocRef = doc(db, "users", userAuth.uid);
	const userSnapshot = await getDoc(userDocRef);
	const doesExist = userSnapshot.exists();

	if (!doesExist) {
		const { displayName, email } = userAuth;
		const createdAt = serverTimestamp();

		try {
			await setDoc(userDocRef, {
				displayName,
				email,
				createdAt,
			});
		} catch (err) {
			console.log(
				`Error encountered while creating the account for ${displayName}.
				Error: ${err.message}`
			);
		}
	}

	return userDocRef;
};
